{
   "parser": "@typescript-eslint/parser",
   "parserOptions": {
      "warnOnUnsupportedTypeScriptVersion": false,
      "ecmaVersion": 6,
      "sourceType": "module"
   },
   "env": {
      "browser": false,
      "node": true,
      "es6": true
   },
   "plugins": ["@typescript-eslint", "jsdoc", "import"],

   "rules": {
      "@typescript-eslint/adjacent-overload-signatures": "error",
      "@typescript-eslint/array-type": "error",

      "brace-style": "off",
      "@typescript-eslint/brace-style": ["error", "1tbs", { "allowSingleLine": true }],

      "no-shadow": "off",
      "@typescript-eslint/no-shadow": ["error"],

      "@typescript-eslint/naming-convention": [
         "error",
         {
            "selector": "typeLike",
            "format": ["PascalCase"],
            "filter": {
               "regex": "^(__String|[A-Za-z]+_[A-Za-z]+)$",
               "match": false
            }
         },
         {
            "selector": "interface",
            "format": ["PascalCase"],
            "filter": {
               "regex": "^I(Arguments|TextWriter|O([A-Z][a-z]+[A-Za-z]*)?)$",
               "match": false
            }
         },
         {
            "selector": "variable",
            "format": ["camelCase", "PascalCase", "UPPER_CASE"],
            "leadingUnderscore": "allow",
            "filter": {
               "regex": "^(_{1,2}filename|_{1,2}dirname|_+|[A-Za-z]+_[A-Za-z]+)$",
               "match": false
            }
         },
         {
            "selector": "function",
            "format": ["camelCase", "PascalCase"],
            "leadingUnderscore": "allow",
            "filter": { "regex": "^[A-Za-z]+_[A-Za-z]+$", "match": false }
         },
         {
            "selector": "parameter",
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "filter": {
               "regex": "^(_+|[A-Za-z]+_[A-Z][a-z]+)$",
               "match": false
            }
         },
         {
            "selector": "method",
            "format": ["camelCase", "PascalCase"],
            "leadingUnderscore": "allow",
            "filter": { "regex": "^[A-Za-z]+_[A-Za-z]+$", "match": false }
         },
         {
            "selector": "memberLike",
            "format": ["camelCase"],
            "leadingUnderscore": "allow",
            "filter": { "regex": "^[A-Za-z]+_[A-Za-z]+$", "match": false }
         },
         {
            "selector": "enumMember",
            "format": ["camelCase", "PascalCase"],
            "leadingUnderscore": "allow",
            "filter": { "regex": "^[A-Za-z]+_[A-Za-z]+$", "match": false }
         },
         { "selector": "property", "format": null }
      ],

      "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
      "@typescript-eslint/consistent-type-assertions": ["error", { "assertionStyle": "as" }],

      "no-duplicate-imports": "off",
      "@typescript-eslint/no-duplicate-imports": "error",

      "@typescript-eslint/no-inferrable-types": "error",
      "@typescript-eslint/no-misused-new": "error",
      "@typescript-eslint/no-this-alias": "error",

      "no-unused-expressions": "off",
      "@typescript-eslint/no-unused-expressions": ["error", { "allowTernary": true }],

      "@typescript-eslint/prefer-for-of": "error",
      "@typescript-eslint/prefer-function-type": "error",
      "@typescript-eslint/prefer-namespace-keyword": "error",

      "quotes": "off",
      "@typescript-eslint/quotes": [
         "error",
         "double",
         { "avoidEscape": true, "allowTemplateLiterals": true }
      ],

      "semi": "off",
      "@typescript-eslint/semi": "error",

      "space-before-function-paren": "off",
      "@typescript-eslint/space-before-function-paren": [
         "error",
         {
            "asyncArrow": "always",
            "anonymous": "always",
            "named": "never"
         }
      ],

      "@typescript-eslint/triple-slash-reference": "error",
      "@typescript-eslint/type-annotation-spacing": "error",
      "@typescript-eslint/unified-signatures": "error",

      // eslint-plugin-import
      "import/no-extraneous-dependencies": ["error", { "optionalDependencies": false }],

      // eslint-plugin-jsdoc
      "jsdoc/check-alignment": "error",

      // eslint
      "constructor-super": "error",
      "dot-notation": "error",
      "eqeqeq": "error",
      "new-parens": "error",
      "no-caller": "error",
      "no-duplicate-case": "error",
      "no-empty": "error",
      "no-eval": "error",
      "no-extra-bind": "error",
      "no-fallthrough": "error",
      "no-new-func": "error",
      "no-new-wrappers": "error",
      "no-return-await": "error",
      "no-sparse-arrays": "error",
      "no-template-curly-in-string": "error",
      "no-throw-literal": "error",
      "no-undef-init": "error",
      "no-unsafe-finally": "error",
      "no-unused-labels": "error",
      "no-var": "error",
      "object-shorthand": "error",
      "prefer-const": "error",
      "prefer-object-spread": "error",
      "quote-props": ["error", "consistent-as-needed"],
      "unicode-bom": ["error", "never"],
      "use-isnan": "error",
      "comma-dangle": ["error", "always-multiline"],
      "comma-spacing": "error",
      "comma-style": "error",
      "curly": ["error", "multi-or-nest", "consistent"],
      "dot-location": ["error", "property"],
      "handle-callback-err": "off",
      "max-nested-callbacks": ["error", { "max": 4 }],
      "max-statements-per-line": ["error", { "max": 2 }],
      "no-console": "off",
      "no-empty-function": "error",
      "no-floating-decimal": "error",
      "no-multi-spaces": "error",
      "no-multiple-empty-lines": ["error", { "max": 5, "maxEOF": 1, "maxBOF": 0 }],
      "no-trailing-spaces": ["error"],
      "object-curly-spacing": ["error", "always"],
      "space-before-blocks": "error",
      "space-in-parens": "error",
      "space-infix-ops": "error",
      "space-unary-ops": "error",
      "yoda": "error"
   }
}
